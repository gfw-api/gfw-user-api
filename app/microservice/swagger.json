{
  "swagger": "2.0",
  "info": {
    "title": "GFW User API",
    "description": "Global Forest Watch - User API",
    "version": "1.0.0"
  },
  "host": "example.vizzuality.com",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "basePath": "/api/v1",
  "paths": {
    "/user/{id}": {
      "delete": {
        "description": "Delete user based on a single ID, if the user not exist return 404\n**Is necesary authentication**\n#### Example response\n```json\n{\n    \"data\": {\n        \"type\": \"user\",\n        \"id\": \"516a333ba0008d0e003b733b\",\n        \"attributes\": {\n            \"provider\": \"twitter\",\n            \"providerId\": \"000000000\",\n            \"email\": \"vizz@vizzuality.com\",\n            \"createdAt\": \"2016-06-23T15:41:41.248Z\",\n            \"primaryResponsibilities\": [\"responsabilities\"],\n            \"howDoYouUse\": [\"testing\"],\n            \"signUpForTesting\": false,\n            \"country\": \"Spain\",\n            \"city\": \"Madrid\",\n            \"stage\": \"\"\n        }\n    }\n}\n```\n",
        "operationId": "deleteUserById",
        "produces": [
          "application/vnd.api+json"
        ],
        "tags": [
          "USER"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "$ref": "#/definitions/UserAPI"
            }
          },
          "401": {
            "description": "Not authorized. if you try to delete a different user to yours",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update user based on a single ID, if the user not exist return 404\n**Is necesary authentication**\n#### Example response\n```json\n{\n    \"data\": {\n        \"type\": \"user\",\n        \"id\": \"516a333ba0008d0e003b733b\",\n        \"attributes\": {\n            \"provider\": \"twitter\",\n            \"providerId\": \"000000000\",\n            \"email\": \"vizz@vizzuality.com\",\n            \"createdAt\": \"2016-06-23T15:41:41.248Z\",\n            \"primaryResponsibilities\": [\"responsabilities\"],\n            \"howDoYouUse\": [\"testing\"],\n            \"signUpForTesting\": false,\n            \"country\": \"Spain\",\n            \"city\": \"Madrid\",\n            \"stage\": \"\"\n        }\n    }\n}\n```\n",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "tags": [
          "USER"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User to save\n#### Body example\n```json\n{\n    \"provider\": \"twitter\",\n    \"providerId\": \"000000000\",\n    \"email\": \"vizz@vizzuality.com\",\n    \"createdAt\": \"2016-06-23T15:41:41.248Z\",\n    \"primaryResponsibilities\": [\"responsabilities\"],\n    \"howDoYouUse\": [\"testing\"],\n    \"signUpForTesting\": false,\n    \"country\": \"Spain\",\n    \"city\": \"Madrid\",\n    \"stage\": \"\"\n}\n```\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/UserAPI"
            }
          },
          "401": {
            "description": "Not authorized. if you try to update a different user to yours",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Create user. If user exist, return 400",
        "description": "Create user\n**Is necesary authentication**\n```json\n{\n    \"data\": {\n        \"type\": \"user\",\n        \"id\": \"516a333ba0008d0e003b733b\",\n        \"attributes\": {\n            \"provider\": \"twitter\",\n            \"providerId\": \"000000000\",\n            \"email\": \"vizz@vizzuality.com\",\n            \"createdAt\": \"2016-06-23T15:41:41.248Z\",\n            \"primaryResponsibilities\": [\"responsabilities\"],\n            \"howDoYouUse\": [\"testing\"],\n            \"signUpForTesting\": false,\n            \"country\": \"Spain\",\n            \"city\": \"Madrid\",\n            \"stage\": \"\"\n        }\n    }\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "tags": [
          "USER"
        ],
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to save\n#### Body example\n```json\n{\n    \"provider\": \"twitter\",\n    \"providerId\": \"000000000\",\n    \"email\": \"vizz@vizzuality.com\",\n    \"createdAt\": \"2016-06-23T15:41:41.248Z\",\n    \"primaryResponsibilities\": [\"responsabilities\"],\n    \"howDoYouUse\": [\"testing\"],\n    \"signUpForTesting\": false,\n    \"country\": \"Spain\",\n    \"city\": \"Madrid\",\n    \"stage\": \"\"\n}\n```\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user created",
            "schema": {
              "$ref": "#/definitions/UserAPI"
            }
          },
          "400": {
            "description": "Validate error or duplicated user",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "object",
      "description": "Errors",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "A unique identifier for this particular occurrence of the problem."
        },
        "links": {
          "type": "object",
          "description": "A links object",
          "properties": {
            "about": {
              "type": "string",
              "description": "A link that leads to further details about this particular occurrence of the problem."
            }
          }
        },
        "status": {
          "type": "string",
          "description": "The HTTP status code applicable to this problem, expressed as a string value"
        },
        "code": {
          "type": "string",
          "description": "An application-specific error code, expressed as a string value"
        },
        "title": {
          "type": "string",
          "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
        },
        "detail": {
          "type": "string",
          "description": "A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized"
        },
        "source": {
          "type": "object",
          "description": "An object containing references to the source of the error, optionally including any of the following members",
          "properties": {
            "pointer": {
              "type": "string",
              "description": "A JSON Pointer [RFC6901] to the associated entity in the request document"
            },
            "parameter": {
              "type": "string",
              "description": "A string indicating which URI query parameter caused the error."
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "A meta object containing non-standard meta-information about the error."
        }
      }
    },
    "UserAPI": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Resource type"
        },
        "id": {
          "type": "string",
          "description": "Resource id"
        },
        "attributes": {
          "properties": {
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          }
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "description": "Provider of oauth"
        },
        "providerId": {
          "type": "string",
          "description": "Id of provider obtained in the authentication"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "sector": {
          "type": "string"
        },
        "primaryResponsabilities": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "howDoYouUse": {
          "type": "string"
        }
      }
    },
    "UserCreate": {
      "allOf": [
        {
          "$ref": "#/definitions/UserData"
        }
      ],
      "type": "object"
    }
  }
}